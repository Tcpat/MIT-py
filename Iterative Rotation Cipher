def shift(string, number):
    shifted = len(string)%number
    string =  string[:shifted] + string[shifted:]
    return string
def deshift(string, number):
    shifted = len(string)%number
    string = string[shifted:] + string[:shifted]
    return string

def separate(string):
    """
    returns a list of the lenght of each word
    """
    words = string.split()
    numbers = []
    for word in words:
        numbers.append(len(word))
    return numbers

def encode(n,strng):
    if len(strng) < 2:
        return strng
    number = separate(strng)
    for _ in range(n):          #applies the encoding n times
        new = ""
        index1 = 0
        index2 = 0
        strng = strng.replace(" ", "")              #deletes spaces
        strng = shift(strng, n)                     #shifts the whole string
        lista = []
        for i in number:
            index2 += i
            lista.append(strng[index1:index2])      #put spaces back at their position
            index1 += i
        for i in range(len(lista)):
            lista[i] = shift(lista[i], n)           #shifts each word
        strng = " ".join(lista)
        print(strng)
    return str(n) + " " + strng

def decode(strng):
    if len(strng) < 2:
        return strng
    cosa = strng.split()
    delete = len(cosa[0]) + 1           #how many characters at the beginning are the N plus the space
    n = int(cosa[0])                    # find n, shifting number
    strng = strng[delete:]              #deletes n and the first space to get the string to work on
    number = separate(strng)
    print(n)
    print(number)
    print(strng)

    for _ in range(n):
        new = ""
        lista = strng.split()
        for i in range(len(lista)):
            lista[i] = deshift(lista[i], n)             #deshifts each word first
        strng = "".join(lista)
        index1 = 0
        index2 = 0
        strng = deshift(strng, n)                       #deshifts the whole string
        for i in number:
            index2 += i
            new += strng[index1:index2] + " "           #put spaces back at their position
            index1 += i
        strng = new[:-1]
        print(strng)
    return strng

